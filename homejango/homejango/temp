html

<aside id="news">
        </aside>


css


#news {
    float: right;
    width: 10%;
    padding: 1.0%;
    height: 100vh;
    color: #0F0F0F;
    border-left: 5px solid #4d4d4d; /* Изменено на border-left */
}


         {% if user.is_authenticated %}

                    {% endif %}


<iframe src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d42232.377837461965!2d27.498552516850165!3d53.88646013095581!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sru!2sby!4v1718045242097!5m2!1sru!2sby" width="1024" height="868" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>






#navigation-panel {
    float: left;
    width: 17%;
    padding: 1.0%;
    height: 100vh; /* Используем высоту экрана (100vh) */
    position: relative; /* Задаем позицию relative для элемента-родителя */
    color: #0F0F0F;
    border-right: 5px solid #4d4d4d
    max-width: 17%; /* Добавляем максимальную ширину */

}
#navigation-panel::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 2px; /* Ширина вашей границы */
    background-color: #4d4d4d; /* Цвет вашей границы */
}


.nav_panel {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap; /* Добавляем перенос элементов */
}


 body {
            background-color: #E4FFFF;
            margin: 0;
            padding: 0;
        }



        .main_h {
    margin-left: 17%;
    text-align: center; /* Выравниваем текст по центру */
    padding: 0; /* Добавляем внутренние отступы для отделения заголовка от ASIDE и контента */
    width: calc(100% - 17%)
    font-family: 'Montserrat', sans-serif;
    font-size: 2.5em;
    font-weight: bold;
    color: #333; /* Цвет текста */
    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2); /* Тень текста */
}



{% load static %}
#navigation-panel {
    float: left;
    width: 17%;
    padding: 1.0%;
    height: 100%; /* Используем высоту экрана (100vh) */
    position: fixed; /* Задаем позицию relative для элемента-родителя */
    top: 0;
    bottom: 0;
    color: #0F0F0F;
    max-width: 17%; /* Добавляем максимальную ширину */
    border-right: 5px solid #4d4d4d;
}




linear-gradient(to bottom right, #FFFFCC, #FFD700)








        .block_prof {
    display: flex;
    margin-left: 17%; /* Отступ для навигационной панели */
    flex-direction: column; /* Блоки будут расположены горизонтально */
    width: 80%; /* Вычитаем отступ из общей ширины */

    }

    .block_prof_child {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row; /* Изменяем направление flexbox на строку для содержимого */
        width: 850px; /* Вычитаем padding из ширины каждого блока */
        justify-content: space-around; /* Распределение по горизонтали */
        align-items: flex-start;
        padding: 10px;
        box-sizing: border-box; /* Учитываем padding в расчете ширины */
        background: linear-gradient(to bottom right, #ffffff, #cccccc);
        box-shadow: 10px 10px 20px #aaaaaa;
        border-radius: 10px;
    }

    .block_prof_child tr {
        margin-bottom: 10px; /* Пример отступа в 10px между строками */
        }

.block_prof_child2 p {
    width: 200px;
    height 20px;
    align-content: center;
}

def profile_update(request):
    user = request.user
    client, created = Clients.objects.get_or_create(user=user)
    form = ProfileUserForm(request.POST or None, instance=user)
    pets_formset = PetsFormSet(request.POST or None, instance=client)

    if request.method == 'POST':
        if form.is_valid():

            # Обновление данных клиента

            client.first_name = form.cleaned_data['first_name']
            client.last_name = form.cleaned_data['last_name']
            client.phone = form.cleaned_data['phone']
            client.save()



            user.first_name = form.cleaned_data['first_name']
            user.last_name = form.cleaned_data['last_name']
            user.phone = form.cleaned_data['phone']
            user.save()

            for pet_form in pets_formset:
                if pet_form.is_valid() and 'id' in pet_form.cleaned_data:
                    if pet_form.is_valid():  # Проверяем прошла ли форма валидацию
                        should_delete = pet_form.cleaned_data.get('DELETE', False)
                        if should_delete:
                            if pet_form.instance.pk:  # Проверяем существует ли объект в базе данных
                                pet_form.instance.delete()
                        elif pet_form_data:  # Проверяем, содержатся ли данные в форме
                            nickname = pet_form.cleaned_data.get('nickname')
                            birthdate = pet_form.cleaned_data.get('birthdate')
                            breed = pet_form.cleaned_data.get('breed')
                            color = pet_form.cleaned_data.get('color')

                            if pet_form.instance:  # Обновление существующего питомца
                                pet = pet_form.instance
                                pet.nickname = nickname
                                pet.birthdate = birthdate
                                pet.breed = breed
                                pet.color = color
                            else:
                                pet = Pets.objects.create(client=client, nickname=nickname, birthdate=birthdate,
                                                          breed=breed, color=color)
                            pet.save()

    return render(request, 'users/profile.html', {
        'form': form,
        'pets_formset': pets_formset,
        'title': 'Профайл'
    })


 <p class="block_prof_child text_bold text_big_size">Ваши питомцы</p>
                <div class="block_prof_child">
         <tr>{{ pets_formset.management_form }}
        {% for pet_form in pets_formset %}
        {{ pet_form.nickname }}
        {{ pet_form.birthdate }}
        {{ pet_form.breed }}
        {{ pet_form.color }}
            <td>{{ pet_form.DELETE }}</td>
         </tr>
        <br>
        {% endfor %}
        </div>
        <p><button class="btn btn-outline-dark" type="submit">Сохранить</button></p>