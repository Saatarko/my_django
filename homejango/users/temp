
def profile_update(request):
    user = request.user
    client, created = Clients.objects.get_or_create(user=user)
    form = ProfileUserForm(request.POST or None, instance=user)
    pets_formset = PetsFormSet(request.POST or None, instance=client)

    if request.method == 'POST':
        if form.is_valid():

            # Обновление данных клиента

            client.first_name = form.cleaned_data['first_name']
            client.last_name = form.cleaned_data['last_name']
            client.phone = form.cleaned_data['phone']
            client.save()

            user.first_name = form.cleaned_data['first_name']
            user.last_name = form.cleaned_data['last_name']
            user.phone = form.cleaned_data['phone']
            user.save()

            for pet_form in pets_formset:
                if pet_form.is_valid():
                    pet_id = pet_form.cleaned_data.get('id', None)  # Получаем id питомца из данных формы

                    for pet_form in pets_formset:
                        if 'DELETE' in pet_form.data and pet_form.data['DELETE'][0] == 'on':
                            pet_id = pet_form.cleaned_data.get('id', None)
                            if pet_id:
                                try:
                                    pet = Pets.objects.get(id=pet_id)
                                    pet.delete()
                                except Pets.DoesNotExist:
                                    pass
                        else:

                            if not pet_id:  # Если id отсутствует, оставляем форму для создания нового питомца
                                continue

                            try:
                                pet = Pets.objects.get(pk=pet_id)
                                pet.nickname = pet_form.cleaned_data.get('nickname')
                                pet.birthdate = pet_form.cleaned_data.get('birthdate')
                                pet.breed = pet_form.cleaned_data.get('breed')
                                pet.color = pet_form.cleaned_data.get('color')
                                pet.save()  # Обновляем питомца
                            except Pets.DoesNotExist:
                                pass

    return render(request, 'users/profile.html', {
        'form': form,
        'pets_formset': pets_formset,
        'title': 'Профайл'
    })







    def profile_update(request):
    user = request.user
    client, created = Clients.objects.get_or_create(user=user)
    form = ProfileUserForm(request.POST or None, instance=user)
    pets_formset = PetsFormSet(request.POST or None, instance=client)

    if request.method == 'POST':
        if form.is_valid():

            # Обновление данных клиента

            client.first_name = form.cleaned_data['first_name']
            client.last_name = form.cleaned_data['last_name']
            client.phone = form.cleaned_data['phone']
            client.save()

            user.first_name = form.cleaned_data['first_name']
            user.last_name = form.cleaned_data['last_name']
            user.phone = form.cleaned_data['phone']
            user.save()

            for pet_form in pets_formset:
                if pet_form.is_valid():
                    pet_id = pet_form.cleaned_data.get('id', None)  # Получаем id питомца из данных формы

                    for pet_form in pets_formset:
                        if 'DELETE' in pet_form.data and pet_form.data['DELETE'][0] == 'on':
                            pet_id = pet_form.cleaned_data.get('id', None)
                            if pet_id:
                                try:
                                    pet = Pets.objects.get(id=pet_id)
                                    pet.delete()
                                except Pets.DoesNotExist:
                                    pass
                        else:

                            if not pet_id:  # Если id отсутствует, оставляем форму для создания нового питомца
                                continue

                            try:
                                pet = Pets.objects.get(pk=pet_id)
                                pet.nickname = pet_form.cleaned_data.get('nickname')
                                pet.birthdate = pet_form.cleaned_data.get('birthdate')
                                pet.breed = pet_form.cleaned_data.get('breed')
                                pet.color = pet_form.cleaned_data.get('color')
                                pet.save()  # Обновляем питомца
                            except Pets.DoesNotExist:
                                pass

    return render(request, 'users/profile.html', {
        'form': form,
        'pets_formset': pets_formset,
        'title': 'Профайл'
    })


                        <p class="text_bold"> Кличка питомца </p>
                    <p class="text_bold"> Дата рождения</p>
                   <p class="text_bold"> Порода</p>
                    <p class="text_bold">Окрас</p>



   <input type="date" id="birthdate" name="birthdate" value="{{ pets.birthdate|date:'Y-m-d' }}">